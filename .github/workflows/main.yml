name: Java CI with Gradle  #워터플로우 이름

on:
  push:  #main 브랜치에 푸쉬할때
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:  # 단계 : 마켓플레이즈에 등록된 작업
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'zulu'  #JDK 제공하는 제공자
      - name: Grant execute permission for gradlew  #gladle을 통해 실행
        run: chmod +x gradlew  # 권한을 주는 것을 실행
      - name: Build with Gradle
        run: ./gradlew build
      - name: Docker build  # 도커 jar 파일을 통해 컨테이너화 하는 것
        run: | # 도커 빌드할 때 사용하는 명령어 
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker build -t spring-cicd . 
          docker tag spring-cicd minjikk/spring-cicd:${GITHUB_SHA::7}  
          docker push minjikk/spring-cicd:${GITHUB_SHA::7}
  #위 내용은 지속적 통합을 위한 스크립트입니다.
  #지속적 통합을 위한 스크립트 아래에 작성합니다.
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      - name: Start Session Manager session
        run: aws ssm start-session --target i-0d301e3f2117f8088
      - name: Deploy to Server
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ap-northeast-2
        run: |
          aws ssm send-command \  
            --instance-ids i-0d301e3f2117f8088 \
            --document-name "AWS-RunShellScript" \
            --parameters "commands=[
              'if sudo docker ps -a --format \\'{{.Names}}\\' | grep -q \\'^server$\\'; then',
              '  sudo docker stop server',
              '  sudo docker rm server',
              'fi',
              'sudo docker pull minjikk/spring-cicd:${GITHUB_SHA::7}',
              'sudo docker tag minjikk/spring-cicd:${GITHUB_SHA::7} spring-cicd',
              'sudo docker run -d --name server -p 8080:8080 spring-cicd'
            ]" \
            --output text
